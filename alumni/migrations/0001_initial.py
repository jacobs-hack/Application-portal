# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-03 20:06
from __future__ import unicode_literals

import alumni.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(help_text='E.g. Campus Ring 1', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='E.g. Apt 007 (optional)', max_length=255, null=True)),
                ('city', models.CharField(help_text='E.g. Bremen', max_length=255)),
                ('zip', models.CharField(help_text='E.g. 28759', max_length=255)),
                ('state', models.CharField(blank=True, help_text='E.g. Bremen (optional)', max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('addressVisible', models.BooleanField(default=False, help_text='Include me on the alumni map (only your city will be visible to others)')),
            ],
        ),
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(help_text='Your first name', max_length=255)),
                ('middleName', models.CharField(blank=True, help_text='Your middle name(s)', max_length=255, null=True)),
                ('lastName', models.CharField(help_text='Your last name', max_length=255)),
                ('email', models.EmailField(help_text='Your private email address', max_length=254, unique=True)),
                ('existingEmail', models.EmailField(blank=True, help_text='Existing <em>@jacobs-alumni.de</em> email address (if you have one)', max_length=254, null=True)),
                ('sex', alumni.fields.GenderField(choices=[('fe', 'Female'), ('ma', 'Male'), ('ot', 'Non-binary'), ('un', 'Prefer not to say')], default='un', max_length=2)),
                ('birthday', models.DateField(help_text='Your birthday in YYYY-MM-DD format')),
                ('birthdayVisible', models.BooleanField(default=False, help_text='Make birthday visible to others')),
                ('nationality', django_countries.fields.CountryField(help_text='You can select multiple options by holding the <em>Ctrl</em> key (or <em>Command</em> on Mac) while clicking', max_length=746, multiple=True)),
                ('category', alumni.fields.AlumniCategoryField(choices=[('re', 'Alumni (Former Student)'), ('fa', 'Faculty or Staff'), ('fr', 'Friend Of The Association')], default='re', max_length=2)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval', models.BooleanField(default=False, help_text='Has the user been approved by an admin?')),
                ('gsuite', models.EmailField(blank=True, help_text='The G-Suite E-Mail of the user', max_length=254, null=True, unique=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='approval', to='alumni.Alumni')),
            ],
        ),
        migrations.CreateModel(
            name='JacobsData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college', alumni.fields.CollegeField(blank=True, choices=[(1, 'Krupp'), (2, 'Mercator'), (3, 'College III'), (4, 'Nordmetall'), (5, 'College V')], null=True)),
                ('graduation', alumni.fields.ClassField(choices=[(2004, 'Class of 2004'), (2005, 'Class of 2005'), (2006, 'Class of 2006'), (2007, 'Class of 2007'), (2008, 'Class of 2008'), (2009, 'Class of 2009'), (2010, 'Class of 2010'), (2011, 'Class of 2011'), (2012, 'Class of 2012'), (2013, 'Class of 2013'), (2014, 'Class of 2014'), (2015, 'Class of 2015'), (2016, 'Class of 2016'), (2017, 'Class of 2017')])),
                ('degree', alumni.fields.DegreeField(blank=True, choices=[('ba', 'Bachelor of Arts'), ('bsc', 'Bachelor of Science'), ('ma', 'Master of Arts'), ('msc', 'Master of Science'), ('phd', 'PhD'), ('mba', 'MBA')], max_length=3, null=True)),
                ('major', alumni.fields.MajorField(choices=[('ACM', 'Applied Computational Mathematics (ACM)'), ('APAM', 'Applied Physics and Mathematics'), ('AP', 'Astroparticle Physics'), ('AF', 'Attitude Formation'), ('BE', 'Biochemical Engineering'), ('BC', 'Biochemistry'), ('BACB', 'Biochemistry and Cell Biology (BCCB)'), ('BCCB', 'Bioinformatics and Computational Biology'), ('BR', 'Biological Recognition'), ('B', 'Biology'), ('BNEO', 'Biology/Neuroscience'), ('BT', 'Biotechnology'), ('BA', 'Buisness Administration'), ('C', 'Chemistry'), ('COM', 'Communications'), ('CPAS', 'Comparative PolitIcs and Sociology'), ('CS', 'Computer Science'), ('EASS', 'Earth and Space Sciences'), ('EECS', 'Electrical Engineering and Computer Science'), ('EUM', 'European Utility Management'), ('GOD', 'Geo-Ocean Dynamics'), ('GAA', 'Geosciences and Astrophysics'), ('GEAM', 'Global Economics and Management (GEM)'), ('GVC', 'Global Visual Communication'), ('H', 'History'), ('HATOAAL', 'History and Theory of Art and Literature'), ('HM', 'Humanities'), ('IMAS', 'Information Management and Systems (IMS)'), ('ICS', 'Integrated Cultural Studies'), ('IES', 'Integrated Environmental Studies'), ('ISACP', 'Integrated Social and Cognitive Psychology (ISCP)'), ('ISS', 'Integrated Social Sciences'), ('IH', 'Intercultural Humanities'), ('IRAB', 'Intercultural Relations and Behaviour (IRB)'), ('IC', 'International Communication'), ('IHAP', 'International History and Politics'), ('ILEAM', 'International Logistics Engineering and Management (ILME)'), ('IPAH', 'International Politics and History (IPH)'), ('IR', 'International Relations'), ('LCALD', 'Life-Course and Lifespan Dynamics'), ('LL', 'Lifelong Learning'), ('MM', 'Marine Microbiology'), ('M', 'Mathematics'), ('MGH', 'Modern Global History'), ('MLS', 'Molecular Life Science'), ('NS', 'Nanomolecular Sciences'), ('N', 'Neuroscience'), ('P', 'Physics'), ('PEPP', 'Political Economy & Public Policy'), ('PAD', 'Productive Adult Development'), ('PSY', 'Psychology'), ('SS', 'Smart Systems'), ('VCAE', 'Visual Communication and Expertise'), ('OTHER', 'Other (Please specify in comments)')], default='OTHER', max_length=7)),
                ('comments', models.TextField(blank=True, help_text='e.g. exchange semester, several degrees etc.', null=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jacobs', to='alumni.Alumni')),
            ],
        ),
        migrations.CreateModel(
            name='JobInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employer', models.CharField(blank=True, help_text='Your employer (optional)', max_length=255, null=True)),
                ('position', models.CharField(blank=True, help_text='Your position (optional)', max_length=255, null=True)),
                ('industry', alumni.fields.IndustryField(choices=[(47, 'Accounting'), (94, 'Airlines/Aviation'), (120, 'Alternative Dispute Resolution'), (125, 'Alternative Medicine'), (127, 'Animation'), (19, 'Apparel & Fashion'), (50, 'Architecture & Planning'), (111, 'Arts and Crafts'), (53, 'Automotive'), (52, 'Aviation & Aerospace'), (41, 'Banking'), (12, 'Biotechnology'), (36, 'Broadcast Media'), (49, 'Building Materials'), (138, 'Business Supplies and Equipment'), (129, 'Capital Markets'), (54, 'Chemicals'), (90, 'Civic & Social Organization'), (51, 'Civil Engineering'), (128, 'Commercial Real Estate'), (109, 'Computer Games'), (3, 'Computer Hardware'), (118, 'Computer & Network Security'), (5, 'Computer Networking'), (4, 'Computer Software'), (48, 'Construction'), (24, 'Consumer Electronics'), (25, 'Consumer Goods'), (91, 'Consumer Services'), (18, 'Cosmetics'), (65, 'Dairy'), (1, 'Defense & Space'), (99, 'Design'), (132, 'E-Learning'), (69, 'Education Management'), (112, 'Electrical/Electronic Manufacturing'), (28, 'Entertainment'), (86, 'Environmental Services'), (110, 'Events Services'), (76, 'Executive Office'), (122, 'Facilities Services'), (63, 'Farming'), (43, 'Financial Services'), (38, 'Fine Art'), (66, 'Fishery'), (34, 'Food & Beverages'), (23, 'Food Production'), (101, 'Fund-Raising'), (26, 'Furniture'), (29, 'Gambling & Casinos'), (145, 'Glass, Ceramics & Concrete'), (75, 'Government Administration'), (148, 'Government Relations'), (140, 'Graphic Design'), (124, 'Health, Wellness and Fitness'), (68, 'Higher Education'), (14, 'Hospital & Health Care'), (31, 'Hospitality'), (137, 'Human Resources'), (134, 'Import and Export'), (88, 'Individual & Family Services'), (147, 'Industrial Automation'), (84, 'Information Services'), (96, 'Information Technology and Services'), (42, 'Insurance'), (74, 'International Affairs'), (141, 'International Trade and Development'), (6, 'Internet'), (45, 'Investment Banking'), (46, 'Investment Management'), (73, 'Judiciary'), (77, 'Law Enforcement'), (9, 'Law Practice'), (10, 'Legal Services'), (72, 'Legislative Office'), (30, 'Leisure, Travel & Tourism'), (85, 'Libraries'), (116, 'Logistics and Supply Chain'), (143, 'Luxury Goods & Jewelry'), (55, 'Machinery'), (11, 'Management Consulting'), (95, 'Maritime'), (97, 'Market Research'), (80, 'Marketing and Advertising'), (135, 'Mechanical or Industrial Engineering'), (126, 'Media Production'), (17, 'Medical Devices'), (13, 'Medical Practice'), (139, 'Mental Health Care'), (71, 'Military'), (56, 'Mining & Metals'), (35, 'Motion Pictures and Film'), (37, 'Museums and Institutions'), (115, 'Music'), (114, 'Nanotechnology'), (81, 'Newspapers'), (100, 'Nonprofit Organization Management'), (57, 'Oil & Energy'), (113, 'Online Media'), (0, 'Other'), (123, 'Outsourcing/Offshoring'), (87, 'Package/Freight Delivery'), (146, 'Packaging and Containers'), (61, 'Paper & Forest Products'), (39, 'Performing Arts'), (15, 'Pharmaceuticals'), (131, 'Philanthropy'), (136, 'Photography'), (117, 'Plastics'), (107, 'Political Organization'), (67, 'Primary/Secondary Education'), (83, 'Printing'), (105, 'Professional Training & Coaching'), (102, 'Program Development'), (79, 'Public Policy'), (98, 'Public Relations and Communications'), (78, 'Public Safety'), (82, 'Publishing'), (62, 'Railroad Manufacture'), (64, 'Ranching'), (44, 'Real Estate'), (40, 'Recreational Facilities and Services'), (89, 'Religious Institutions'), (144, 'Renewables & Environment'), (70, 'Research'), (32, 'Restaurants'), (27, 'Retail'), (121, 'Security and Investigations'), (7, 'Semiconductors'), (58, 'Shipbuilding'), (20, 'Sporting Goods'), (33, 'Sports'), (104, 'Staffing and Recruiting'), (22, 'Supermarkets'), (8, 'Telecommunications'), (60, 'Textiles'), (130, 'Think Tanks'), (21, 'Tobacco'), (108, 'Translation and Localization'), (92, 'Transportation/Trucking/Railroad'), (150, 'Unemployed'), (59, 'Utilities'), (106, 'Venture Capital & Private Equity'), (16, 'Veterinary'), (93, 'Warehousing'), (133, 'Wholesale'), (142, 'Wine and Spirits'), (119, 'Wireless'), (103, 'Writing and Editing')], default=0)),
                ('job', alumni.fields.JobField(choices=[(1, 'Accounting / Finance'), (2, 'Administrative'), (3, 'Analyst'), (4, 'Architecture / Drafting'), (5, 'Art / Design / Entertainment'), (6, 'Banking / Loan / Insurance'), (7, 'Beauty / Wellness'), (8, 'Business Development / Consulting'), (9, 'Education'), (10, 'Engineering (Non-software)'), (11, 'Facilities / General Labor'), (12, 'Hospitality'), (13, 'Human Resources'), (14, 'Installation / Maintenance / Repair'), (15, 'Legal'), (16, 'Manufacturing / Production / Construction'), (17, 'Marketing / Advertising / PR'), (18, 'Medical / Healthcare'), (19, 'Non-Profit / Volunteering'), (20, 'Product / Project Management'), (21, 'Real Estate'), (22, 'Restaurant / Food Services'), (23, 'Retail'), (24, 'Sales / Customer Care'), (25, 'Science / Research'), (26, 'Security / Law Enforcement'), (27, 'Senior Management'), (28, 'Skilled Trade'), (29, 'Software Development / IT'), (30, 'Sports / Fitness'), (31, 'Travel / Transportation'), (32, 'Writing / Editing / Publishing'), (33, 'Other'), (34, 'Unemployed')], default=34)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job', to='alumni.Alumni')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', alumni.fields.TierField(choices=[('co', 'Contributor (Standard package for graduation before 2016): 39€ p.a.'), ('pa', 'Patron (Premium package for those who want to contribute more): 249€ p.a. '), ('st', 'Starter (For graduation after 2016 or unable to financially contribute): 1 symbolic cent p.a.')], default='co', help_text='Membership Tier', max_length=2)),
                ('starterReason', models.TextField(blank=True, help_text='Please provide a short explanation on why you choose the starter plan. ', null=True)),
                ('token', models.CharField(blank=True, help_text='The stripe card token for the user', max_length=255, null=True)),
                ('customer', models.CharField(blank=True, help_text='The stripe customer id for the user', max_length=255, null=True)),
                ('subscription', models.CharField(blank=True, help_text='The payment token for the customer', max_length=255, null=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='alumni.Alumni')),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otherDegrees', models.TextField(blank=True, null=True)),
                ('spokenLanguages', models.TextField(blank=True, null=True)),
                ('programmingLanguages', models.TextField(blank=True, null=True)),
                ('areasOfInterest', models.TextField(blank=True, help_text='E.g. Start-Ups, Surfing, Big Data, Human Rights, etc', null=True)),
                ('alumniMentor', models.BooleanField(default=False, help_text='I would like to sign up as an alumni mentor')),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='alumni.Alumni')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, help_text='Your Facebook Profile (optional)', null=True)),
                ('linkedin', models.URLField(blank=True, help_text='Your LinkedIn Profile (optional)', null=True)),
                ('twitter', models.URLField(blank=True, help_text='Your Twitter Account (optional)', null=True)),
                ('instagram', models.URLField(blank=True, help_text='Your Instagram (optional)', null=True)),
                ('homepage', models.URLField(blank=True, help_text='Your Homepage or Blog', null=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social', to='alumni.Alumni')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='member',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='alumni.Alumni'),
        ),
    ]
